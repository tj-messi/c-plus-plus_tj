
VS2022生成可执行文件：
清理解决方案：
把Debug目录清空

一键全部生成exe：
1、清空解决方案
2、重新生成解决方案（最好创建一个新的项目）

Dev生成可执行文件：
生成在Demo2里头，而不是Debug里头，且文件一般更大一些
——————————————————————————
system（“pause”）可以解决程序运行过快，双击闪退的问题
但高程作业不能用，影响批处理正确性(死循环)
——————————————————————————
cmd直接输地址方法：
1、D： 回车，切换到D盘
2、cd test\Debug 回车，到Debug目录
——————————————————————————
cmd最快方法：
文件栏找到相应地址，清空写cmd，直接跳转
——————————————————————————
打开文件方式：
直接输名字.exe可以不写
——————————————————————————————————————————————————
cerr输出，错误输出，不要换行符（Enter）立刻输出
clog输出，需要换行符（Enter）或等到缓冲区满再输出
—————————————————————————
demo > a.txt(不写就当标准输出)
demo 1> a.txt（标准输出重定向给a.txt）
demo 2> a.txt（错误输出重定向给a.txt）
demo 1> a.txt 2> b.txt（这个不用多说了吧，功能不错，别忘了空格）
demo 1> a.txt 2>&1(错误输出也怼到a.txt里面)
—————————————————————————
>全替换 >>追加
—————————————————————————
cls 清屏
—————————————————————————
直接输入notepad z.txt（创建一个叫z.txt的记事本）
—————————————————————————
demo < z.txt（把z.txt提前准备好的测试数据拿来demo测一测） 少数据就出随机值，多数据就恰掉尾巴
—————————————————————————
> < 顺序可以随便
—————————————————————————
小键盘↑粘贴上一句
—————————————————————————
手打好用点
—————————————————————————
批处理：
notepad 名字.bat
进去bat直接重定向，如：
3-b3 < 3-b3-01.txt > 3-b3-result1.txt
3-b3 < 3-b3-02.txt
3-b3 < 3-b3-03.txt
然后cmd里直接名字.bat 就他妈的全测出来了
—————————————————————————
type z.txt（显示文本）
—————————————————————————
type z.txt | demo | demo2 (把z.txt的传送给demo算，再把demo的结果送给demo2算)
—————————————————————————
get_input_data用法
1.用notepad编辑test-data.txt，建立32个组
组格式
[3-b3-01](方括号必有)
999.9
2.get_input_data test-data.txt 3-b3-01 | 3-b3
—————————————————————————
想他吗的一步做完就用bat加get_input_data加乱七八糟的东东
—————————————————————————
文本比较命令
comp 要求必须完全相同
方式: comp 3-b3-1234567.txt 3-b3-result.txt(俩文件中间一个空格)
—————————————————————————
fc /w 忽略空格差异（必须加一起用，fc比comp详细点，但也无法忽视空格），用法与comp相同
—————————————————————————
txt_compare 好用（直接文件名是帮助信息）
参数1：--file1
txt_compare --file1 3-b3-01.txt --file2 3-b3-02.txt
参数2: --display detailed
txt_compare --file1 3-b3-01.txt --file2 3-b3-02.txt --display detailed
参数3 --display normal(跟参数2用法相同，但没那么详细)
参数4： --trim right 允许右边空格
参数5： --trim left 允许左边空格
参数6： --trim all 允许所有空格




